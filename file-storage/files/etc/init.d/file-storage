#!/bin/sh /etc/rc.common

# Copyright (C) 2015 Justin Liu
# https://github.com/rssnsj/network-feeds

START=95

# Get mount point of specified storage device or
# partition (e.g., /dev/sda1), empty for unmounted.
__mount_point_of()
{
	local device="$1"
	[ -b "$device" ] || return 1
	awk -vd="$device" '$1==d{print $2}' /proc/mounts | grep '^\/...\/storage' | head -n1
}

__check_cfg_delete()
{
	local cfg=$1

	local ident=`uci get samba.$cfg.ident 2>/dev/null`
	[ -n "$ident" ] || return 0

	local device=/dev/$ident
	local mount_dir=`__mount_point_of "$device"`
	if [ -z "$mount_dir" ]; then
		uci delete samba.$cfg
		echo "Deleted samba share for '$mount_dir'" >&2
	fi
}

# Detect all attached disks and partitions (not only USB devices).
# Return value: 0 - changed, non-zero - unchanged.
detect_usb_storages()
{
	local FSN=/tmp/.fsn
	local modified=N
	local ident

	rm -rf $FSN
	mkdir -p $FSN

	# Delete shares for detached devices
	config_load samba
	config_foreach __check_cfg_delete sambashare

	# Probe new devices and add shares
	local device
	for device in /dev/sd* /dev/mmcblk*; do
		[ -b "$device" ] || continue

		local mount_dir=`__mount_point_of "$device"`
		[ -n "$mount_dir" ] || continue

		# Use device name as the config identifier
		local ident=`basename "$device"`

		# Use volume label as share name, UUID as fallback
		local blkid_info=`blkid $device`
		local sharename=`expr "$blkid_info" : '.*LABEL="\([^"]\+\)'`
		# Fallback to UUID if LABEL is empty or contains Windows filename reserved chars
		if [ -z "$sharename" ] || expr "$sharename" : '.*[<>:"/\\|?\*{}]' >/dev/null; then
			sharename=`expr "$blkid_info" : '.*UUID="\([^"]\+\)'`
			[ -z "$sharename" ] && sharename="$ident"
			sharename="Disk-$sharename"
		fi

		# Fallback the name with a numeral suffix to resolve conflicts
		if [ -e "$FSN/$sharename" ]; then
			local j
			# NOTICE: We don't expect to see many conflicts on a single name
			for j in 2 3 4 5 6 7 8 9; do
				if [ ! -e "$FSN/${sharename}_$j" ]; then
					sharename="${sharename}_$j"
					break
				fi
			done
		fi
		touch "$FSN/$sharename"

		# Fix directory permission
		chmod 777 $mount_dir

		uci set samba.$ident=sambashare
		uci set samba.$ident.ident=$ident
		uci set samba.$ident.name="$sharename"
		uci set samba.$ident.read_only=no
		uci set samba.$ident.create_mask=0777
		uci set samba.$ident.dir_mask=0777
		uci set samba.$ident.path=$mount_dir
		uci set samba.$ident.guest_ok=yes
	done

	rm -rf $FSN

	uci commit samba
	return 0
}

start()
{
	/etc/init.d/samba disable
	detect_usb_storages
	/etc/init.d/samba stop 2>/dev/null
	/etc/init.d/samba start
}

stop()
{
	/etc/init.d/samba stop
}

reload()
{
	detect_usb_storages
	/etc/init.d/samba restart
}
